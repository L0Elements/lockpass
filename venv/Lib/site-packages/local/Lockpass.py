'''
Python 3.10.10
By L0Elements

ERROR TABLE:
0 = Success
1 = Probably a software's problem: autofix process executed
2 = Input-related problem
'''
import os
import datetime
import shutil
import secrets

def error():
#    print("An error has occurred, trying to autofix")
    lockpass.initialize()
#    print("Autofix Done! Try to repeat the command, if the problem persists, contact the support")
    return 0
class lockpass():

    def newbook(name, description, ): # type: ignore
        try:
            list = lockpass.booklist()
            if not name in list: # type: ignore
                os.mkdir("Data/books/" + name) # type: ignore
            else:
                return 2
        except:
            error()
            return 1

        with open("Data/books/" + name +"/.bookinfo", "w") as f: # type: ignore
            f.write("Name: " + name + '\n' + "Created on: " + str(datetime.date.today()) + "\nDescription: " + description) # type: ignore
        i = open("Data/books/" + name + "/.index", "x") #type: ignore
        i.close()
        return 0
    def help(): # type: ignore
        return 0
    def initialize(): # type: ignore
        try:
            os.mkdir("Data")
        except:
            pass
        try:
            os.mkdir("Data/books")
        except:
            pass
        return 0
    def booklist():	# type: ignore
        try:
            list = os.listdir("Data/Books")
        except FileNotFoundError:
            error()
            return 1
        return os.listdir("Data/Books")
    def rmbook(name): #type: ignore
        list = lockpass.booklist()
        if name in list: # type: ignore
            shutil.rmtree("Data/books/" + name) # type: ignore
            return 0
        else:
            return 2 #Book does not exist

    def addpasswd(bookname, account_location, account_username, password, type): #type: ignore
        list = lockpass.booklist()
        uuid = secrets.token_hex(32)
        if bookname in list: # type: ignore
            with open("Data/books/" + bookname + "/" + uuid, "w") as f: # type: ignore
                f.write("Id: " + uuid + "\nType: " + type + "\nUserName: " + account_username + "\nLocation: " + account_location + "\nPassword: " + password)
            l = open("Data/books/" + bookname + "/.index", "a")
            l.write(uuid + "  :  " + account_location + " " + account_username)
            l.close()
        else:
            return 2
        return 0